function fs_cvn_print2nd(anaStruct, glmFolder, clusterSigFn, outPath)
% fs_cvn_print2nd(anaStruct, [glmFolder = {'glm-group'}, ...
% clusterSigFn = 'perm.th30.abs.sig.cluster.nii.gz', outPath = pwd])
%
% This function prints the results of second level (group level) analysis.
%
% Inputs:
%    anaStruct      <struct> generated by fs_isxconcat.m. (Includes the
%                    .group, .analysisName, .contrastName.
%    glmFolder      <string> the name of the glm output folder.
%                OR <string cell> path to the glm folders and anaStrcut
%                    will be ignored.
%    clusterSigFn   <string> the filename of the cluster p value file
%                    (e.g., perm.th30.abs.sig.cluster.nii.gz by default).
%    outPath        <string> where to save the output images. [current
%                    folder by default].
%
% Output:
%    images of group-level results saved at outPath.
%
% Created by Haiyang Jin (13-Apr-2020)

if ~exist('glmFolder', 'var') || isempty(glmFolder)
    glmFolder = {'glm-group'};
elseif ischar(glmFolder)
    glmFolder = {glmFolder};
end

if ~exist('clusterSignFn', 'var') || isempty(clusterSigFn)
    clusterSigFn = 'perm.th30.abs.sig.cluster.nii.gz';
end

% output path
if ~exist('outPath', 'var') || isempty(outPath)
    outPath = pwd;
end
outPath = fullfile(outPath, 'Group_level_results');
if ~exist(outPath, 'dir'); mkdir(outPath); end

% check if glmFolder are paths
isPath = cellfun(@(x) ~isempty(fileparts(x)), glmFolder);

% create path to glm folder
if all(isPath)
    glmPath = glmFolder;
elseif all(~isPath)
    glmPath = fullfile(getenv('FUNCTIONALS_DIR'), {anaStruct.group}, ...
        {anaStruct.analysisName}, {anaStruct.contrastName}, glmFolder);
end

% create path to the cluster p-value file
theFiles = fullfile(glmPath, 'osgm', clusterSigFn);

% only keep the files for left hemisphere
leftFiles = theFiles';
leftFiles(contains(leftFiles, 'rh')) = [];
% find the corresponding files for right hemisphere
rightFiles = strrep(leftFiles, 'lh', 'rh');

% combine files for left and right hemispheres
surfs = [leftFiles, rightFiles];

% generate figures
lookup = '';
for iSurf = 1: size(surfs, 1)
    
    % this pair of surfaces
    thisSurf = surfs(iSurf, :);
    
    % read the file into structure
    valstruct = fs_cvn_valstruct(thisSurf);
    
    % generate figures for this pair
    [fig, lookup] = fs_cvn_lookuplmv('fsaverage', valstruct, [], ...
        [], 0, lookup, 2);
    
    % obtain the contrast name as the figure name
    theConName = unique(cellfun(@fs_label2contrast, thisSurf, 'uni', false));
    
    % set the figure name and save it
    set(fig, 'Name', theConName{1});
    print(fig, fullfile(outPath, theConName{1}),'-dpng');
    
end

end